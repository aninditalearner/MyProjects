{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProjects\\\\React\\\\ExpenseChart\\\\src\\\\components\\\\NewExpense\\\\NewExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './NewExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewExpenseForm = () => {\n  _s();\n  //const [enteredTitle, setEnteredTitle] = useState('');\n  //const [enteredPrice, setEnteredPrice] = useState('');\n  //const [enteredDate, setEnteredDate] = useState('');\n\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredPrice: '',\n    enteredDate: ''\n  });\n  const titleChangeHandler = event => {\n    //setEnteredTitle(event.target.value);\n    setUserInput({\n      ...userInput,\n      enteredTitle: event.target.value\n    });\n  };\n  const priceChangeHandler = event => {\n    //setEnteredPrice(event.target.value);\n    /*setUserInput({\r\n        ...userInput,\r\n        enteredPrice: event.target.value,\r\n    });*/\n\n    // we should use arrow function instead of this approach because React schedules State updates and sometime we might get outdated states\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        enteredTitle: event.target.value\n      };\n    });\n  };\n  const dateChangeHandler = event => {\n    //setEnteredDate(event.target.value);\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        enteredDate: event.target.value\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: priceChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2021-01-01\",\n          max: \"2023-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(NewExpenseForm, \"fPfP3k9cl/UV7j15hE4vWOWANdQ=\");\n_c = NewExpenseForm;\nexport default NewExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"NewExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewExpenseForm","_s","userInput","setUserInput","enteredTitle","enteredPrice","enteredDate","titleChangeHandler","event","target","value","priceChangeHandler","prevState","dateChangeHandler","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["C:/MyProjects/React/ExpenseChart/src/components/NewExpense/NewExpenseForm.js"],"sourcesContent":["import React, { useState} from 'react';\r\n\r\nimport './NewExpenseForm.css';\r\n\r\nconst NewExpenseForm=()=>{\r\n    //const [enteredTitle, setEnteredTitle] = useState('');\r\n    //const [enteredPrice, setEnteredPrice] = useState('');\r\n    //const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const [userInput, setUserInput] = useState({\r\n        enteredTitle: '',\r\n        enteredPrice: '',\r\n        enteredDate: ''\r\n    });\r\n\r\n    const titleChangeHandler = (event) =>{\r\n        //setEnteredTitle(event.target.value);\r\n        setUserInput({\r\n            ...userInput,\r\n            enteredTitle: event.target.value,\r\n        });\r\n    }\r\n\r\n    \r\n    const priceChangeHandler = (event) =>{\r\n        //setEnteredPrice(event.target.value);\r\n        /*setUserInput({\r\n            ...userInput,\r\n            enteredPrice: event.target.value,\r\n        });*/\r\n\r\n        // we should use arrow function instead of this approach because React schedules State updates and sometime we might get outdated states\r\n        setUserInput((prevState) => {\r\n           return {...prevState, enteredTitle: event.target.value} \r\n        });\r\n    }\r\n\r\n    const dateChangeHandler = (event) =>{\r\n        //setEnteredDate(event.target.value);\r\n        setUserInput((prevState) => {\r\n            return {...prevState, enteredDate: event.target.value} \r\n         });\r\n    }\r\n    return (\r\n    <form>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type='text' onChange={ titleChangeHandler }/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type='number' min='0.01' step='0.01' onChange={ priceChangeHandler }/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type='date' min='2021-01-01' max='2023-12-31' onChange={ dateChangeHandler }/>\r\n            </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n            <button type='submit'>Add Expense</button>\r\n        </div>\r\n    </form>\r\n    );\r\n}\r\n\r\nexport default NewExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}